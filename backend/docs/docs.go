// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v2/users/info": {
            "post": {
                "description": "Authenticate token and return a userinfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "UserInfo",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Users"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/users.Response"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/users.Response"
                        }
                    }
                }
            }
        },
        "/api/v2/users/login": {
            "post": {
                "description": "Authenticate the user and return a token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "description": "Login Credentials",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.Body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/users.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/users.LoginResponse"
                        }
                    }
                }
            }
        },
        "/api/v2/users/register": {
            "post": {
                "description": "Authenticate token and return a userinfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Register User",
                "parameters": [
                    {
                        "description": "User info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Users"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/users.Response"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "$ref": "#/definitions/users.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Users": {
            "type": "object",
            "properties": {
                "actived": {
                    "type": "string"
                },
                "affiliateLink": {
                    "description": "ใช้บันทึกลิงค์ที่ใช้",
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                },
                "bankname": {
                    "type": "string"
                },
                "banknumber": {
                    "type": "string"
                },
                "beforebalance": {
                    "type": "number"
                },
                "betLimit": {
                    "type": "string"
                },
                "betamount": {
                    "type": "number"
                },
                "commissionEarned": {
                    "description": "ค่าคอมมิชชันสะสมจาก Affiliated",
                    "type": "number"
                },
                "crdb": {
                    "type": "number"
                },
                "createdAt": {
                    "type": "string"
                },
                "credit": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "deletionAt": {
                    "type": "string"
                },
                "deposit": {
                    "type": "number"
                },
                "firstname": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "integer"
                },
                "lastDeposit": {
                    "type": "number"
                },
                "lastProamount": {
                    "type": "number"
                },
                "lastWithdraw": {
                    "type": "number"
                },
                "lastname": {
                    "type": "string"
                },
                "lose": {
                    "type": "number"
                },
                "minTurnover": {
                    "type": "string"
                },
                "minTurnoverDef": {
                    "type": "string"
                },
                "otpAuthUrl": {
                    "type": "string"
                },
                "partnerID": {
                    "description": "ใช้บันทึก ID ของ partner ที่เชื่อมโยง",
                    "type": "integer"
                },
                "partnersKey": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "preferredname": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "proBalance": {
                    "type": "number"
                },
                "proID": {
                    "type": "string"
                },
                "proStatus": {
                    "type": "string"
                },
                "providerPassword": {
                    "type": "string"
                },
                "referralCode": {
                    "description": "รหัสแนะนำ",
                    "type": "string"
                },
                "referred_by": {
                    "description": "ผู้แนะนำ (User ID)",
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "salt": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "sumProamount": {
                    "type": "number"
                },
                "tdeposit": {
                    "type": "number"
                },
                "tempSecret": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "totalEarnings": {
                    "description": "ค่าคอมมิชชั่นสะสม",
                    "type": "number"
                },
                "totalTurnover": {
                    "description": "Turnover รวมที่เกิดจากสมาชิกและ Affiliated",
                    "type": "number"
                },
                "turnover": {
                    "type": "number"
                },
                "twithdraw": {
                    "type": "number"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "walletid": {
                    "type": "integer"
                },
                "win": {
                    "type": "number"
                },
                "withdraw": {
                    "type": "number"
                }
            }
        },
        "users.Body": {
            "type": "object",
            "properties": {
                "Status": {
                    "type": "string"
                },
                "channel": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "provide": {
                    "type": "string"
                },
                "startdate": {
                    "type": "string"
                },
                "stopdate": {
                    "type": "string"
                },
                "userid": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "users.LoginResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Users"
                },
                "status": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "users.Response": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Users"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "152.42.185.164:4006",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Backend API Document",
	Description:      "This is a sample API server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
