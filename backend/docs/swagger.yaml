basePath: /
definitions:
  models.Users:
    properties:
      actived:
        type: string
      affiliateLink:
        description: ใช้บันทึกลิงค์ที่ใช้
        type: string
      balance:
        type: number
      bankname:
        type: string
      banknumber:
        type: string
      beforebalance:
        type: number
      betLimit:
        type: string
      betamount:
        type: number
      commissionEarned:
        description: ค่าคอมมิชชันสะสมจาก Affiliated
        type: number
      crdb:
        type: number
      createdAt:
        type: string
      credit:
        type: number
      currency:
        type: string
      deletionAt:
        type: string
      deposit:
        type: number
      firstname:
        type: string
      fullname:
        type: string
      id:
        description: gorm.Model
        type: integer
      lastDeposit:
        type: number
      lastProamount:
        type: number
      lastWithdraw:
        type: number
      lastname:
        type: string
      lose:
        type: number
      minTurnover:
        type: string
      minTurnoverDef:
        type: string
      otpAuthUrl:
        type: string
      partnerID:
        description: ใช้บันทึก ID ของ partner ที่เชื่อมโยง
        type: integer
      partnersKey:
        type: string
      password:
        type: string
      preferredname:
        type: string
      prefix:
        type: string
      proBalance:
        type: number
      proID:
        type: string
      proStatus:
        type: string
      providerPassword:
        type: string
      referralCode:
        description: รหัสแนะนำ
        type: string
      referred_by:
        description: ผู้แนะนำ (User ID)
        type: string
      role:
        type: string
      salt:
        type: string
      secret:
        type: string
      status:
        type: integer
      sumProamount:
        type: number
      tdeposit:
        type: number
      tempSecret:
        type: string
      token:
        type: string
      totalEarnings:
        description: ค่าคอมมิชชั่นสะสม
        type: number
      totalTurnover:
        description: Turnover รวมที่เกิดจากสมาชิกและ Affiliated
        type: number
      turnover:
        type: number
      twithdraw:
        type: number
      updatedAt:
        type: string
      username:
        type: string
      walletid:
        type: integer
      win:
        type: number
      withdraw:
        type: number
    type: object
  users.Body:
    properties:
      Status:
        type: string
      channel:
        type: string
      password:
        type: string
      prefix:
        type: string
      provide:
        type: string
      startdate:
        type: string
      stopdate:
        type: string
      userid:
        type: integer
      username:
        type: string
    type: object
  users.LoginResponse:
    properties:
      data:
        $ref: '#/definitions/models.Users'
      status:
        type: boolean
      token:
        type: string
    type: object
  users.Response:
    properties:
      data:
        $ref: '#/definitions/models.Users'
      message:
        type: string
      status:
        type: boolean
    type: object
host: 152.42.185.164:4006
info:
  contact: {}
  description: This is a sample API server.
  title: Backend API Document
  version: "1.0"
paths:
  /api/v2/users/info:
    post:
      consumes:
      - application/json
      description: Authenticate token and return a userinfo
      parameters:
      - description: User info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Users'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/users.Response'
        "401":
          description: unauthorized
          schema:
            $ref: '#/definitions/users.Response'
      summary: UserInfo
      tags:
      - Users
  /api/v2/users/login:
    post:
      consumes:
      - application/json
      description: Authenticate the user and return a token
      parameters:
      - description: Login Credentials
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/users.Body'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/users.LoginResponse'
        "401":
          description: unauthorized
          schema:
            $ref: '#/definitions/users.LoginResponse'
      summary: Login User
      tags:
      - Users
  /api/v2/users/register:
    post:
      consumes:
      - application/json
      description: Authenticate token and return a userinfo
      parameters:
      - description: User info
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Users'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/users.Response'
        "401":
          description: unauthorized
          schema:
            $ref: '#/definitions/users.Response'
      summary: Register User
      tags:
      - Users
swagger: "2.0"
